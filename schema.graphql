scalar LocalDate

type Marking {
  close: Float!
  high: Float!
  low: Float!
  open: Float!
  ticker: String!
  volume: Int!
}

type MarkingAtDay {
  date: LocalDate!
  marking: Marking!
}

type Mutation {
  createUser(email: String!, password: String!, userName: String!): Int!
  signIn(email: String!, password: String!): Boolean!
}

type Query {
  getMarkings(endDate: LocalDate, startDate: LocalDate, stock: String!, ticker: String!): [MarkingAtDay!]!
  stocksSummary(stocks: [String!]): [StockSummary!]!
}

type SecurityInfo {
  endDate: LocalDate!
  startDate: LocalDate!
  ticker: String!
}

type StockSummary {
  endDate: LocalDate!
  name: String!
  readableName: String!
  securities: [SecurityInfo!]!
  startDate: LocalDate!
}
